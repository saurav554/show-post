{"version":3,"sources":["component/Home.js","actions/postsAction.js","component/PostList.js","component/PostListShow.js","App.js","reducers/postReducers.js","index.js","store/ConfigureStore.js"],"names":["Home","props","style","textAlign","color","startGetPosts","dispatch","axios","get","then","response","posts","data","type","payload","setPosts","PostList","handleSearch","e","filter","post","title","includes","target","value","setState","search","newData","state","this","length","onChange","placeholder","map","ele","i","key","to","id","React","Component","connect","ShowListPost","console","log","find","match","params","postId","body","App","path","component","exact","usersInitialState","postsReducer","action","concat","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","getState","subscribe","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bcfdf33.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Home(props)\n{\n    return(\n        <div>\n            \n            <h2 style={{textAlign:'center',color:'rgb(11,16,23)'}}>Welcome To The Website</h2>\n        </div>\n    )\n}\nexport default Home","import axios from 'axios'\n//sync action\nexport const setPosts=(posts)=>{\n    return {type:'SET_POSTS',payload:posts}\n}\n\n//asyn action\nexport const startGetPosts=()=>{\n    return (dispatch)=>{\n        axios.get(`https://jsonplaceholder.typicode.com/posts`)\n        .then(response=>{\n            const posts=response.data\n            dispatch(setPosts(posts))\n        })\n    }\n}","import {connect} from 'react-redux'\nimport {startGetPosts} from '../actions/postsAction'\nimport React from 'react'\nimport {Link} from 'react-router-dom'\n\nclass PostList extends React.Component\n{\n    constructor(){\n        super()\n        this.state={\n            search:'',\n            newData:[]\n        }\n    }\n    handleSearch=(e)=>{\n        let data=this.props.posts.filter(post=>post.title.includes(e.target.value))\n        this.setState({\n            search:e.target.value,\n            newData:data\n        })\n    }\n    componentDidMount()\n    {\n        if(this.props.posts.length===0)\n        {\n            this.props.dispatch(startGetPosts())\n        }\n    }\n    render()\n    {\n        // console.log(this.props.posts)\n        return(\n        <div>   \n            <input type='search' onChange={this.handleSearch} placeholder='search title'></input>\n            {\n                this.state.newData.length==0 ? (\n                    <div>\n                        <h2>Total Posts - {this.props.posts.length}</h2>\n                        <ul>\n                        {\n                            this.props.posts.map((ele,i)=>{\n                                return (<li key={i}><Link to={`/posts/${ele.id}`}>{ele.title}</Link></li>)\n                            })\n                        }\n                        </ul>\n                    </div>\n                ):(\n                    <div>\n                         <ul>\n                        {\n                            this.state.newData.map((ele,i)=>{\n                                return (<li key={i}><Link to={`/posts/${ele.id}`}>{ele.title}</Link></li>)\n                            })\n                        }\n                        </ul>\n                    </div>\n                )\n            }\n            \n        </div>\n        )\n    }\n}\nconst mapStateToProps=(state)=>{\n    return {\n        \n        posts:state.posts\n    }\n}\n\nexport default connect(mapStateToProps)(PostList)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nclass ShowListPost extends React.Component\n{\n    \n    render() {\n        console.log('post',this.props.posts)\n        return (\n            <div>\n                <h2>USER NAME:- {this.props.posts.find(post=>post.id==this.props.match.params.postId)?.id}</h2>\n                <h2>TITLE :-{this.props.posts.find(post=>post.id==this.props.match.params.postId)?.title}</h2>\n                <h2>BODY:- {this.props.posts.find(post=>post.id==this.props.match.params.postId)?.body}</h2>\n                <p><Link to='/postlist'>Back</Link></p>\n            </div> \n        )\n    }\n}\nconst mapStateToProps=(state,props)=>{\n    const id=props.match.params.postId\n    console.log('id',id)\n    return {\n         posts:state.posts\n    }\n}\n\nexport default connect(mapStateToProps)(ShowListPost)","import React from 'react'\nimport Home from './component/Home'\nimport PostList from './component/PostList'\nimport ShowListPost from './component/PostListShow'\nimport {BrowserRouter,Route,Link} from 'react-router-dom'\n\nfunction App(props)\n{\n    return(\n        <BrowserRouter>\n            <div>\n                <h2>Hello React App!!!</h2>\n                <Link to='/'>Home</Link>-\n                <Link to='/postlist'>Posts</Link>\n\n                <Route path='/' component={Home} exact={true}/>\n                <Route path='/postlist' component={PostList} exact={true}/>\n                <Route path='/posts/:postId' component={ShowListPost}/>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App","const usersInitialState=[]\nconst postsReducer=(state=usersInitialState,action)=>{\n    switch(action.type)\n    {\n        case 'SET_POSTS':{\n            return [].concat(action.payload)\n        }\n        default:{\n            return [].concat(state)\n        }\n    }\n\n}\nexport default postsReducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport configureStore from './store/ConfigureStore'\nimport  {Provider} from 'react-redux'\nimport { startGetPosts } from './actions/postsAction'\n\nconst store=configureStore()\nconsole.log(store.getState())\n\nstore.subscribe(() => {\n    console.log(store.getState())\n})\nstore.dispatch(startGetPosts())\n\nconst jsx=(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\nReactDOM.render(jsx,document.getElementById('root'))","import { createStore, combineReducers,applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport postsReducer from '../reducers/postReducers'\n\n\nconst configureStore = () => {\n    const store = createStore(combineReducers({\n        posts: postsReducer\n    }),applyMiddleware(thunk))\n    return store \n}\n\nexport default configureStore"],"sourceRoot":""}